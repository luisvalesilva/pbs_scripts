#!/bin/bash
#PBS -l nodes=1:ppn=8,walltime=01:00:00
#PBS -N Spike-in_sim_${EXPID}
#PBS -M ${USER}@nyu.edu
#PBS -m ae
#PBS -v MYVAR="hello"
#PBS -o localhost:/scratch/${USER}/${PBS_JOBNAME}.o${EXPID}_Spike-in_sim_${PBS_JOBID}
#PBS -e localhost:/scratch/${USER}/${PBS_JOBNAME}.e${EXPID}_Spike-in_sim_${PBS_JOBID}

#------------------------------------------------------------------------------#
#                                INSTRUCTIONS                                  #
#------------------------------------------------------------------------------#
# Depends on:
    #- deeptools/intel/2.3.5
    #- samtools/intel/1.3

# How to run PBS script:
# Run this script as:
# $ qsub -v EXPID="task_description",DIR="path/to/dir",BAM="file.bam",FRACT="read_fraction_for_samtools" path/to/Fq2ReadCounts_S288C.pbs
# Example:
# $ qsub -v EXPID="WT_2.5%",DIR="/scratch/lv38/Spike_in_sim/",BAM="AH119B-053013-SacCer3-2mis-PM.bam",FRACT="025" ~/Pipeline/ChIP-seq_spike-in_simulations.pbs

# If you need another variable, you can change 'MYVAR' in the header
#------------------------------------------------------------------------------#

echo "JobID is $PBS_JOBID"

#--------------------------------------------#
#         Subsample input bam file           #
#--------------------------------------------#
cd ${DIR}

echo "Subset BAM file twice..."
module load samtools/intel/1.3
# Change the random number generator seed to get different reads (integer part of '-s' argument)
samtools view -h -b -s 0.05 ${BAM} > A_tmp_${BAM}
samtools view -h -b -s 1.05 ${BAM} > B_tmp_${BAM}

echo "Get subset file line counts..."
# Get read counts in each file
A_lines=$(wc -l A_tmp_${BAM} | awk '{print $1}'")
B_lines=$(wc -l B_tmp_${BAM} | awk '{print $1}'")

echo "Rename subset files to include read number..."
# Rename files to include number of reads
mv A_tmp_${BAM} A_${A_lines}_random_reads_${BAM}
mv B_tmp_${BAM} B_${B_lines}_random_reads_${BAM}

#---------------------------------#
#        Compare coverages        #
#---------------------------------#

module load deeptools/intel/2.3.5
multiBamSummary bins --bamfiles A_${A_lines}_random_reads_${BAM} B_${B_lines}_random_reads_${BAM} \
--labels ${EXPID}_A ${EXPID}_B \
-out ${A_lines}_random_reads_${BAM}_readCounts.npz \ # default output: a compressed numpy array: *.npz
--outRawCounts ${A_lines}_random_reads_${BAM}_readCounts.tsv # alternative output: tab-delimited file

echo "
Done!
"
exit 0;
